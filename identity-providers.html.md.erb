---
title: Identity Providers in UAA
owner: UAA
---

This topic describes the identity providers (IDPs) you can configure with your User Account and Authentication (UAA) server.


## <a id="ldap"></a> LDAP Providers

The [Lightweight Directory Access Protocol](https://tools.ietf.org/html/rfc4511) communicates with directory servers. Compared with the other external IDPs, LDAP is a very simple integration. It only requires configuration on UAA. Other types of provider require that you make configuration changes on both UAA and on the external provider.

LDAP supports three different connection types:

* `ldap://`: Cleartext LDAP, typically over port 389

* `ldaps://`: An SSL/TLS connection, typically over port 636

* `ldap://` with StartTLS: A TLS handshake performed on a cleartext LDAP connection, typically over port 389

For more information, see [User Account and Authentication LDAP Integration](https://github.com/cloudfoundry/uaa/blob/master/docs/UAA-LDAP.md) in the UAA repository on GitHub.


## <a id="saml"></a> SAML Providers

The [SAML v2 standard](http://saml.xml.org/saml-specifications) is a dominant player in the federated authentication space. It is also one of the harder integrations to configure. When configuring SAML integration on UAA, you must configure both UAA and the SAML IDP. A mistake on either side causes assertions to be rejected and authentication to fail.


## <a id="service-identity"></a> Service Provider versus Identity Provider

The SAML specification defines two players in a SAML interaction:

* **Service provider (SP)**, the server that receives the assertion. This is typically UAA.

* **Identity provider (IDP)**, the server that receives the authentication request, authenticates the user and sends the assertion to the SP.

UAA can be configured to act as an SP or IDP. In most scenarios, UAA is the SP, and an external provider, such as Okta or ADFS, is the IDP.

### <a id='metadata'></a> View Metadata

A SAML provider, either the SP or the IDP, presents a set of metadata. This metadata contains information about the server and is used to configure the opposing provider.

If you use UAA as an SP, you can download metadata through the `/saml/metadata` endpoint of your SAML provider. For example, http://login.example.com/saml/metadata. Metadata is in XML format. Using this information, you can configure the IDP.

If you use UAA as an IDP, fetch the metadata from the `/saml/idp/metadata` endpoint. For example, http://login.example.com/saml/idp/metadata.


## <a id="id-flow"></a> IDP Workflow

SAML provides two commonly-used workflows, SP-initiated and IDP-initiated. These sections describe each workflow.

### <a id='sp-initiated'></a> SP-Initiated

If you navigate to the UAA login page and click on a link to authenticate using your organization's SAML provider, you are using an SP-initiated flow.

The SP sends an authentication request to the IDP like the example below:

<pre class="terminal">
<?<span>x</span>ml version="1.0" encoding="UTF-8"?>
<<span>s<span>aml2p:AuthnRequest
    xmlns:saml2p="urn:oasis:names:tc:SAML:2.0:protocol"
    AssertionConsumerServiceURL="https://..host../saml/SSO/alias/login.identity.cf-app.com"
    Destination="http://simplesamlphp.identity.cf-app.com/saml2/idp/SSOService.php"
    ForceAuthn="false"
    ID="a17j41337a9835i93h78hihc9a89j4b"
    IsPassive="false" IssueInstant="2017-05-03T21:16:15.989Z"
    ProtocolBinding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
    Version="2.0"
>
  <<span>s</span>aml2:Issuer xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion">
      Login.identity.cf-app.com
  </<span>s</span>aml2:Issuer>
  <<span>s</span>aml2p:NameIDPolicy Format="urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress" />
<<span>/s</span>aml2p:AuthnRequest>
</pre>

Once the IDP has authenticated the user, it sends an assertion back to the user. This step takes place in both SP-initiated and IDP-initiated flows. For information about the SAML response, see [IDP-Initiated](#idp-initiated).

<img src="./images/sp-flow.png" alt="An SP-initiated flow.">

### <a id='idp-initiated'></a> IDP-Initiated

You can start your authentication process with the IDP.

The IDP sends a SAML assertion to the SP, which in this case is UAA, like the example below:

<pre class="terminal">
<<span>?x</span>ml version="1.0" encoding="UTF-8"?>
<<span>s</span>amlp:Response
    xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    Destination="https://...url.../saml/SSO/alias/login.identity.cf-app.com"
    ID="_de497bc8a79e5f17202a30112181ea7c99325f8827"
    InResponseTo="a17j41337a9835i93h78hihc9a89j4b"
    IssueInstant="2017-05-03T21:51:01Z" Version="2.0">
  <<span>s</span>aml:Issuer>
    http://simplesamlphp.identity.cf-app.com/saml2/idp/metadata.php
  <<span>/s</span>aml:Issuer>
  <<span>d</span>s:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
    <<span>d</span>s:SignedInfo>
      <<span>d</span>s:CanonicalizationMethod
        Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#" />
      <<span>d</span>s:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1" />
      <<span>d</span>s:Reference URI="#_de497bc8a79e5f17202a30112181ea7c99325f8827">
        <<span>d</span>s:Transforms>
          <<span>d</span>s:Transform
            Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" />
          <<span>d</span>s:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#" />
        </<span>d</span>s:Transforms>
        <<span>d</span>s:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1" />
        <<span>d</span>s:DigestValue>QQZHHBC4KDxZ0H4FrbTGFOnNR1E=<\/ds:DigestValue>
      <<span>/d</span>s:Reference>
    <<span>/d</span>s:SignedInfo>
    <<span>d</span>s:SignatureValue>...signature value...<\/ds:SignatureValue>
    <<span>d</span>s:KeyInfo>
      <<span>d</span>s:X509Data>
        <<span>d</span>s:X509Certificate>...x509 certificate value<\/ds:X509Certificate>
      <<span>/d</span>s:X509Data>
    <<span>/</span>ds:KeyInfo>
  <<span>/</span>ds:Signature>
  <<span>s</span>amlp:Status>
    <<span>s</span>amlp:StatusCode Value="urn:oasis:names:tc:SAML:2.0:status:Success" />
  <<span>/</span>samlp:Status>
  <<span>s</span>aml:Assertion
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    ID="_ec6adc4fca9e3dc72fff4a1fd99561007777ac7afd"
    IssueInstant="2017-05-03T21:51:01Z"
    Version="2.0">
<<span>s</span>aml:Issuer>http://simplesamlphp.identity.cf-app.com/saml2/idp/metadata.php<\/saml:Issuer>
    <<span>d</span>s:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
      <<span>d</span>s:SignedInfo>
        <<span>d</span>s:CanonicalizationMethod
          Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#" />
        <<span>d</span>s:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1" />
        <<span>d</span>s:Reference URI="#_ec6adc4fca9e3dc72fff4a1fd99561007777ac7afd">
          <<span>d</span>s:Transforms>
            <<span>d</span>s:Transform
              Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" />
            <<span>d</span>s:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#" />
          <<span>/d</span>s:Transforms>
          <<span>d</span>s:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1" />
          <<span>d</span>s:DigestValue>dxt7OSy1/Xf6+BHgDU4YOi4ogMg=<\/ds:DigestValue>
        <<span>/d</span>s:Reference>
      <<span>/d</span>s:SignedInfo>
      <<span>ds</span>:SignatureValue>...signature value...<\/ds:SignatureValue>
      <<span>d</span>s:KeyInfo>
        <<span>d</span>s:X509Data>
          <<span>d</span>s:X509Certificate>...x509 certificate value<\/ds:X509Certificate>
        <<span>/d</span>s:X509Data>
      <<span>/d</span>s:KeyInfo>
    <<span>/d</span>s:Signature>
    <<span>s</span>aml:Subject>
      <<span>s</span>aml:NameID
        Format="urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
        SPNameQualifier="login.identity.cf-app.com">
          marissa@test.org
      <<span>/s</span>aml:NameID>
      <<span>s</span>aml:SubjectConfirmation
          Method="urn:oasis:names:tc:SAML:2.0:cm:bearer">
        <<span>sa</span>ml:SubjectConfirmationData
            InResponseTo="a9e378fia1g38da5503ahgih430fah"
            NotOnOrAfter="2017-05-03T21:56:01Z"
            Recipient="https://..url../saml/SSO/alias/login.identity.cf-app.com" />
      <<span>/sa</span>ml:SubjectConfirmation>
    <<span>/s</span>aml:Subject>
    <<span>sa</span>ml:Conditions
        NotBefore="2017-05-03T21:50:31Z"
        NotOnOrAfter="2017-05-03T21:56:01Z">
      <<span>sa</span>ml:AudienceRestriction>
        <<span>s</span>aml:Audience>login.identity.cf-app.com<\/saml:Audience>
      <<span>/s</span>aml:AudienceRestriction>
    <<span>/sa</span>ml:Conditions>
    <<span>sa</span>ml:AuthnStatement
        AuthnInstant="2017-05-03T21:16:21Z"
        SessionIndex="_a3ab48bcfbb76ad78d4ac28231240af256be171c9f"
        SessionNotOnOrAfter="2017-05-04T05:51:01Z">
      <<span>sa</span>ml:AuthnContext>
        <<span>sa</span>ml:AuthnContextClassRef>
           urn:oasis:names:tc:SAML:2.0:ac:classes:Password
        <<span>/sa</span>ml:AuthnContextClassRef>
      <<span>/sa</span>ml:AuthnContext>
    <<span>/sa</span>ml:AuthnStatement>
    <<span>sa</span>ml:AttributeStatement>
      <<span>sa</span>ml:Attribute
          Name="uid" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic">
        <<span>sa</span>ml:AttributeValue xsi:type="xs:string">
            marissa@test.org
        <<span>/sam</span>l:AttributeValue>
      <<span>/sam</span>l:Attribute>
      <<span>sam</span>l:Attribute Name="eduPersonAffiliation"
          NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic">
        <<span>sa</span>ml:AttributeValue xsi:type="xs:string">member<\/saml:AttributeValue>
        <<span>sa</span>ml:AttributeValue xsi:type="xs:string">marissa<\/saml:AttributeValue>
      <<span>/sa</span>ml:Attribute>
      <<span>sam</span>l:Attribute Name="emailAddress"
          NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic">
        <<span>sam</span>l:AttributeValue xsi:type="xs:string">
            marissa@test.org
        <<span>/sa</span>ml:AttributeValue>
      <<span>/sam</span>l:Attribute>
    <<span>/sa</span>ml:AttributeStatement>
  <<span>/sa</span>ml:Assertion>
<<span>/sa</span>mlp:Response>
</pre>


## <a id="config"></a> Configuration

UAA provides a limited set of attributes to configure when setting up an external IDP. You configure these attributes for each individual SAML IDP you set up in UAA.

### <a id='nameid'></a> nameID

The `nameID` attribute is the element that provides the username in the SAML assertion. This is sometimes called the _subject_ of the assertion. UAA links the external user to the internal shadow user record by matching the `nameID` to the `user.username`.

For example:

* `nameID: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`

* `nameID: urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`

* `nameID: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress`

The most common configuration is `unspecified`, where the IDP decides which attribute is the username.

Below is an example of what the subject element looks like in an assertion, with the username `EXAMPLE@test.org`:

<pre class="terminal">
<<span>s</span>aml:Subject>
  <<span>s</span>aml:NameID
      Format="urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
      SPNameQualifier="login.identity.cf-app.com">
    EXAMPLE@test.org
  <<span>/s</span>aml:NameID>
  <<span>s</span>aml:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer">
    <<span>s</span>aml:SubjectConfirmationData InResponseTo="a17j41337a9835i93h78hihc9a89j4b"
      NotOnOrAfter="2017-05-03T21:21:21Z"
      Recipient="https://..url../saml/SSO/alias/login.identity.cf-app.com"
    />
  </<span>s</span>aml:SubjectConfirmation>
</<span>s</span>aml:Subject>
</pre>

### <a id='assertionconsumerservice'></a> AssertionConsumerService

The `AssertionConsumerService` attribute indicates which assertion consumer service URL the external IDP should use. This is used by the SP when it sends a SAML request for authentication to the IDP. The SP metadata contains one assertion consumer service by default, but can contain more.

Below are examples of assertion consumer services in SP metadata, organized by index:

<pre class="terminal">
<<span>md</span>:AssertionConsumerService
  Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
  Location="https://login.run.pivotal.io/saml/SSO/alias/login.run.pivotal.io"
  index="0"
  isDefault="true"/>
<<span>m</span>d:AssertionConsumerService
  Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact"
  Location="https://login.run.pivotal.io/saml/SSO/alias/login.run.pivotal.io"
  index="1"/>
<<span>m</span>d:AssertionConsumerService
  Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI"
  Location="https://login.run.pivotal.io/oauth/token/alias/login.run.pivotal.io"
  index="2"/>
</pre>

Below is an example of a SAML request to the IDP with the correct assertion consumer service selected:

<pre class="terminal">
<<span>?x</span>ml version="1.0" encoding="UTF-8"?>
<<span>s</span>aml2p:AuthnRequest
    AssertionConsumerServiceURL="https://..../saml/SSO/alias/login.identity.cf-app.com"
    Destination="http://simplesamlphp.identity.cf-app.com/saml2/idp/SSOService.php"
    ForceAuthn="false"
    ID="a17j41337a9835i93h78hihc9a89j4b"
    IsPassive="false"
    IssueInstant="2017-05-03T21:16:15.989Z"
    ProtocolBinding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
    Version="2.0"
    xmlns:saml2p="urn:oasis:names:tc:SAML:2.0:protocol">
  <<span>s</span>aml2:Issuer
    xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion">
      Login.identity.cf-app.com
  <<span>/s</span>aml2:Issuer>
  <<span>s</span>aml2p:NameIDPolicy
    Format="urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"/>
<<span>/s</span>aml2p:AuthnRequest>
</pre>

### <a id='idpmetadata'></a> idpMetadata

The `idpMetadata` attribute holds either an XML string or a URL.

Below is an example of IDP metadata configuration in UAA:

<pre class="terminal">idpMetadata: \http://simplesamlphp.identity.cf-app.com/saml2/idp/metadata.php</pre>

If the IDP is configured using a URL, UAA refreshes the metadata content from that URL every 10 minutes. This is useful for providers that rotate their keys frequently.

If the IDP is configured using metadata as an XML string, the metadata remains static. Rotating keys on the IDP requires you to reconfigure UAA with the new data.

Below is an example of the XML metadata configuration:

<pre class="terminal">
<<span>?x</span>ml version="1.0" encoding="UTF-8"?>
<<span>md</span>:EntityDescriptor
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    entityID="http://www.okta.com/k2lw4l5bPODCMIIDBRYZ">
  <<span>md</span>:IDPSSODescriptor
      WantAuthnRequestsSigned="true"
      protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
    <<span>md</span>:KeyDescriptor use="signing">
      <<span>ds</span>:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        <<span>ds</span>:X509Data>
          <<span>ds</span>:X509Certificate>..x509 certificate</<span>ds</span>:X509Certificate>
        <<span>/ds</span>:X509Data>
      <<span>/ds</span>:KeyInfo>
    <<span>/md</span>:KeyDescriptor>
    <<span>md</span>:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</<span>md</span>:NameIDFormat>
    <<span>md</span>:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</<span>md</span>:NameIDFormat>
    <<span>md</span>:SingleSignOnService
      Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
      Location="https://s.okta.com/app/env_1/k2lw4l5bPODCMIIDBRYZ/sso/saml" />
    <<span>md</span>:SingleSignOnService
        Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
        Location="https://s.okta.com/app/env_1/k2lw4l5bPODCMIIDBRYZ/sso/saml" />
  <<span>/md:IDPSSODescriptor>
<<span>/md:EntityDescriptor>
</pre>

### <a id='showsamlloginlink'></a> showSamlLoginLink

The `showSamlLoginLink` displays the login link on the UAA home page. This shows when `showSamlLoginLink` is set to `true`, it . Clicking on this link starts the SP-initiated flow. This is frequently set to `false` when you use the IDP-initiated flow.

Below is an example of a SAML login link text configuration:

<pre class="terminal">showSamlLoginLink: true</pre>

### <a id='linktext'></a> linkText

The `linkText` attribute allows you to specify the text on a link on the UAA home page. This shows when `showSamlLoginLink` is set to `true`.

Below is an example of a link text configuration:

<pre class="terminal">linkText: Log in with SSO</pre>

### <a id='metadatatrustcheck'></a> metadataTrustCheck

The `metadataTrustCheck` attribute requires UAA to verify signatures of incoming messages. This requirement exists when `metadataTrustCheck` is set to `true`.

Below is an example of a metadata trust check configuration:

<pre class="terminal">metadataTrustCheck: true</pre>
